-- MySQL Script generated by MySQL Workbench
-- Fri Feb 17 14:39:58 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema gdlsr
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gdlsr
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gdlsr` DEFAULT CHARACTER SET utf8 ;
USE `gdlsr` ;

-- -----------------------------------------------------
-- Table `gdlsr`.`site`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`site` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(100) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`model`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`model` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(100) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(100) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `model_id` INT NOT NULL,
  PRIMARY KEY (`id`, `model_id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE,
  INDEX `fk_group_model1_idx` (`model_id` ASC) VISIBLE,
  CONSTRAINT `fk_group_model1`
    FOREIGN KEY (`model_id`)
    REFERENCES `gdlsr`.`model` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `username_UNIQUE` (`username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`rule`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`rule` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(100) CHARACTER SET 'utf8' NOT NULL,
  `expression` LONGTEXT CHARACTER SET 'utf8' NOT NULL,
  `type` ENUM('HARD_RULE', 'REGEX') CHARACTER SET 'utf8' NOT NULL,
  `level` ENUM('PRIMARY', 'SECONDARY') CHARACTER SET 'utf8' NOT NULL,
  `true_value` ENUM('-1', '0', '1', '2') NOT NULL,
  `false_value` ENUM('-1', '0') NOT NULL,
  `user_last_update` INT NULL,
  `add_column` JSON NULL,
  `group_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`id`, `group_id`, `user_id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE,
  INDEX `fk_rule_group1_idx` (`group_id` ASC) VISIBLE,
  INDEX `fk_rule_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_rule_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `gdlsr`.`group` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_rule_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `gdlsr`.`user` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`domain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`domain` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(200) NOT NULL,
  `name` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`dataset_field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`dataset_field` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(200) NOT NULL,
  `name` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`brand`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`brand` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(100) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `code_UNIQUE` (`code` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`rule_has_domain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`rule_has_domain` (
  `rule_id` INT NOT NULL,
  `domain_id` INT NOT NULL,
  PRIMARY KEY (`rule_id`, `domain_id`),
  INDEX `fk_rule_has_domain_domain1_idx` (`domain_id` ASC) VISIBLE,
  INDEX `fk_rule_has_domain_rule1_idx` (`rule_id` ASC) VISIBLE,
  CONSTRAINT `fk_rule_has_domain_rule1`
    FOREIGN KEY (`rule_id`)
    REFERENCES `gdlsr`.`rule` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rule_has_domain_domain1`
    FOREIGN KEY (`domain_id`)
    REFERENCES `gdlsr`.`domain` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`rule_has_site`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`rule_has_site` (
  `rule_id` INT NOT NULL,
  `site_id` INT NOT NULL,
  PRIMARY KEY (`rule_id`, `site_id`),
  INDEX `fk_rule_has_site_site1_idx` (`site_id` ASC) VISIBLE,
  INDEX `fk_rule_has_site_rule1_idx` (`rule_id` ASC) VISIBLE,
  CONSTRAINT `fk_rule_has_site_rule1`
    FOREIGN KEY (`rule_id`)
    REFERENCES `gdlsr`.`rule` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rule_has_site_site1`
    FOREIGN KEY (`site_id`)
    REFERENCES `gdlsr`.`site` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`rule_has_field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`rule_has_field` (
  `rule_id` INT NOT NULL,
  `field_id` INT NOT NULL,
  PRIMARY KEY (`rule_id`, `field_id`),
  INDEX `fk_rule_has_field_field1_idx` (`field_id` ASC) VISIBLE,
  INDEX `fk_rule_has_field_rule1_idx` (`rule_id` ASC) VISIBLE,
  CONSTRAINT `fk_rule_has_field_rule1`
    FOREIGN KEY (`rule_id`)
    REFERENCES `gdlsr`.`rule` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rule_has_field_field1`
    FOREIGN KEY (`field_id`)
    REFERENCES `gdlsr`.`dataset_field` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`rule_has_brand`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`rule_has_brand` (
  `rule_id` INT NOT NULL,
  `brand_id` INT NOT NULL,
  PRIMARY KEY (`rule_id`, `brand_id`),
  INDEX `fk_rule_has_brand_brand1_idx` (`brand_id` ASC) VISIBLE,
  INDEX `fk_rule_has_brand_rule1_idx` (`rule_id` ASC) VISIBLE,
  CONSTRAINT `fk_rule_has_brand_rule1`
    FOREIGN KEY (`rule_id`)
    REFERENCES `gdlsr`.`rule` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_rule_has_brand_brand1`
    FOREIGN KEY (`brand_id`)
    REFERENCES `gdlsr`.`brand` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`group_has_domain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`group_has_domain` (
  `group_id` INT NOT NULL,
  `domain_id` INT NOT NULL,
  PRIMARY KEY (`group_id`, `domain_id`),
  INDEX `fk_group_has_domain_domain1_idx` (`domain_id` ASC) VISIBLE,
  CONSTRAINT `fk_group_has_domain_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `gdlsr`.`group` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_group_has_domain_domain1`
    FOREIGN KEY (`domain_id`)
    REFERENCES `gdlsr`.`domain` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`group_has_site`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`group_has_site` (
  `group_id` INT NOT NULL,
  `site_id` INT NOT NULL,
  PRIMARY KEY (`group_id`, `site_id`),
  INDEX `fk_group_has_site_site1_idx` (`site_id` ASC) VISIBLE,
  INDEX `fk_group_has_site_group1_idx` (`group_id` ASC) VISIBLE,
  CONSTRAINT `fk_group_has_site_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `gdlsr`.`group` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_group_has_site_site1`
    FOREIGN KEY (`site_id`)
    REFERENCES `gdlsr`.`site` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`group_has_field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`group_has_field` (
  `group_id` INT NOT NULL,
  `field_id` INT NOT NULL,
  PRIMARY KEY (`group_id`, `field_id`),
  INDEX `fk_group_has_field_field1_idx` (`field_id` ASC) VISIBLE,
  INDEX `fk_group_has_field_group1_idx` (`group_id` ASC) VISIBLE,
  CONSTRAINT `fk_group_has_field_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `gdlsr`.`group` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_group_has_field_field1`
    FOREIGN KEY (`field_id`)
    REFERENCES `gdlsr`.`dataset_field` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`group_has_brand`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`group_has_brand` (
  `group_id` INT NOT NULL,
  `brand_id` INT NOT NULL,
  PRIMARY KEY (`group_id`, `brand_id`),
  INDEX `fk_group_has_brand_brand1_idx` (`brand_id` ASC) VISIBLE,
  INDEX `fk_group_has_brand_group1_idx` (`group_id` ASC) VISIBLE,
  CONSTRAINT `fk_group_has_brand_group1`
    FOREIGN KEY (`group_id`)
    REFERENCES `gdlsr`.`group` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_group_has_brand_brand1`
    FOREIGN KEY (`brand_id`)
    REFERENCES `gdlsr`.`brand` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `gdlsr`.`rule_has_dataset_field`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `gdlsr`.`rule_has_dataset_field` (
  `rule_id` INT NOT NULL,
  `dataset_field_id` INT NOT NULL,
  PRIMARY KEY (`rule_id`, `dataset_field_id`),
  INDEX `fk_rule_has_dataset_field_dataset_field1_idx` (`dataset_field_id` ASC) VISIBLE,
  INDEX `fk_rule_has_dataset_field_rule1_idx` (`rule_id` ASC) VISIBLE,
  CONSTRAINT `fk_rule_has_dataset_field_rule1`
    FOREIGN KEY (`rule_id`)
    REFERENCES `gdlsr`.`rule` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_rule_has_dataset_field_dataset_field1`
    FOREIGN KEY (`dataset_field_id`)
    REFERENCES `gdlsr`.`dataset_field` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
